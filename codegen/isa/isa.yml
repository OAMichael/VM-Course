---
# both borders included

fields:
  opcode: 
    name: opcode
    location: {bits: {msb: 7, lsb: 0, from: 7, to: 0}, mask: 255, dbg_hex_mask: ff}
  r1:
    name: r1
    location: {bits: {msb: 15, lsb: 8, from: 7, to: 0}, mask: 65280, dbg_hex_mask: ff00}
  intrCode:
    name: intrCode
    location: {bits: {msb: 15, lsb: 8, from: 7, to: 0}, mask: 65280, dbg_hex_mask: ff00}
  r2:
    name: r2
    location: {bits: {msb: 23, lsb: 16, from: 7, to: 0}, mask: 16711680, dbg_hex_mask: ff0000}
  imm:
    name: imm
    location: {bits: {msb: 31, lsb: 16, from: 15, to: 0}, mask: 4278190080, dbg_hex_mask: ffff0000}

types:
  onlyReg:    [opcode, r1]
  onlyImm:    [opcode, imm]
  nothing:    [opcode]
  twoRegs:    [opcode, r1, r2]
  regAndImm:  [opcode, r1, imm]
  intrinsic:  [opcode, intrCode]

instructions:
  $1:
    name: load_Acc
    type: onlyReg
    implAcc: write
  $2:
    name: store_Acc
    type: onlyReg
    implAcc: read
  $3:
    name: load_Acc_Imm
    type: onlyImm
    implAcc: write
  $4:
    name: to_Float_Reg
    type: onlyReg
    implAcc: write
  $5:
    name: to_Int_Reg
    type: onlyReg
    implAcc: write
  $6:
    name: to_Float
    type: nothing
    implAcc: readWrite
  $7:
    name: to_Int
    type: nothing
    implAcc: readWrite
  $8:
    name: mov
    type: twoRegs
    implAcc: none
  $9:
    name: load_Acc_Mem
    type: regAndImm
    implAcc: write
  $10:
    name: store_Acc_Mem
    type: regAndImm
    implAcc: read
  $11:
    name: add
    type: onlyReg
    implAcc: readWrite
  $12:
    name: sub
    type: onlyReg
    implAcc: readWrite
  $13:
    name: mul
    type: onlyReg
    implAcc: readWrite
  $14:
    name: div
    type: onlyReg
    implAcc: readWrite
  $15:
    name: addf
    type: onlyReg
    implAcc: readWrite
  $16:
    name: subf
    type: onlyReg
    implAcc: readWrite
  $17:
    name: mulf
    type: onlyReg
    implAcc: readWrite
  $18:
    name: divf
    type: onlyReg
    implAcc: readWrite
  $19:
    name: sin
    type: nothing
    implAcc: readWrite
  $20:
    name: cos
    type: nothing
    implAcc: readWrite
  $21:
    name: sqrt
    type: nothing
    implAcc: readWrite
  $22:
    name: call_Intr
    type: intrinsic
    implAcc: readWrite
  $23:
    name: jump
    type: onlyImm
    implAcc: none
  $24:
    name: beq
    type: regAndImm
    implAcc: readWrite
  $25:
    name: bge
    type: regAndImm
    implAcc: readWrite
  $26:
    name: bg
    type: regAndImm
    implAcc: readWrite
  $27:
    name: call
    type: regAndImm
    implAcc: none
  $28:
    name: ret
    type: nothing
    implAcc: write

intrinsics:
  $1:
    name: scan
  $2:
    name: print
  $3:
    name: scanf
  $4:
    name: printf